name: match-assistant-poc Deployment Pipeline

on:
  workflow_dispatch:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: write
  actions: read

jobs:
  commit:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    outputs:
      version: ${{ steps.set-artifact-tag-version.outputs.ARTIFACT_TAG_VERSION }}
      message-id: ${{ steps.commit-cycle-message.outputs.message-id }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"      

      - uses: motain/onefootball-actions/pvt-deps@master
        with:
          github-token: ${{ secrets.PRIVATE_DEPENDENCIES_GITHUB_TOKEN }}

      - id: set-artifact-tag-version
        run: echo "ARTIFACT_TAG_VERSION=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - id: create-tag
        uses: rickstaa/action-create-tag@v1
        with:
          tag: ${{ steps.set-artifact-tag-version.outputs.ARTIFACT_TAG_VERSION }}

      - uses: motain/slack-actions/cd/cycle-result@main
        if: ${{ failure() }}
        with:
          slack-token: ${{ secrets.CONTINUOUS_DELIVERY_APP_SLACK_TOKEN }}
          channel: "e-matchxp-notifications"
          steps-context: ${{ toJson(steps) }}
      - uses: motain/slack-actions/cd/cycle-result@main
        id: commit-cycle-message
        if: ${{ always() }}
        continue-on-error: true
        with:
          slack-token: ${{ secrets.CONTINUOUS_DELIVERY_APP_SLACK_TOKEN }}
          channel: "e-matchxp-notifications"
          steps-context: ${{ toJson(steps) }}

  build:
    needs:
      - commit
    if: ${{ needs.commit.result == 'success' }}
    runs-on: ubuntu-latest
    concurrency: build-python
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - id: build-release-candidate
        uses: motain/onefootball-actions/docker-build-push@master
        with:
          push: True
          tag: ${{ needs.commit.outputs.version}}

  release:
    needs:
      - build
      - commit
    if: ${{ needs.build.result == 'success' }}
    runs-on: ubuntu-latest
    concurrency:
      group: release-python
    steps:
      - uses: actions/checkout@v4

      - id: tag-latest
        uses: motain/onefootball-actions/docker-build-push@master
        with:
          tag: false
          pull: ${{ needs.commit.outputs.version }}

      - id: deploy-production
        uses: motain/onefootball-actions/paas-deploy@master
        with:
          tag: ${{ needs.commit.outputs.version }}
          release: false
          pr-key: ${{ secrets.PAAS_CREATE_AND_MERGE_TO_HELM_CHARTS }}

      - uses: motain/slack-actions/cd/cycle-result@main
        if: ${{ failure() }}
        with:
          slack-token: ${{ secrets.CONTINUOUS_DELIVERY_APP_SLACK_TOKEN }}
          channel: "e-matchxp-notifications"
          steps-context: ${{ toJson(steps) }}
      - uses: motain/slack-actions/cd/cycle-result@main
        if: ${{ always() }}
        continue-on-error: true
        with:
          slack-token: ${{ secrets.CONTINUOUS_DELIVERY_APP_SLACK_TOKEN }}
          channel: "e-matchxp-notifications"
          steps-context: ${{ toJson(steps) }}
          thread-id: ${{ needs.commit.outputs.message-id }}